config {
  type: 'incremental',
  description: 'Daily snapshots of fact table with amplitude and backend users properties',
  schema: 'mart',
  tags: ['users', 'mart', 'snapshot'],
  protected: true,
  name: 'fct__users__properties_snapshots',
  bigquery: {
    partitionBy: '_snapshot_date',
    clusterBy: ['user_id']
  }, 
}

pre_operations {

  ${when(incremental(),
      `delete from ${self()} 
       where _snapshot_date = current_date()`
  )}
}

select
  current_date()            as _snapshot_date,
  current_datetime()        as _run_dttm,

  amp.last_device_operating_system,
  case
    when amp.last_device_operating_system is null then 'unknown'
    else amp.last_device_operating_system
  end as filtered_last_device_operating_system,
  amp.last_media_source,
  case
    when amp.last_media_source is null then 'unknown'
    else amp.last_media_source
  end as filtered_last_media_source,
  db.user_id,
  db.first_order_dt,
  db.last_order_dt,
  db.last_active_city_id,
  case
    when db.last_active_city_id is null then 'unknown'
    else safe_cast(db.last_active_city_id as string)
  end as filtered_last_active_city_id,
  db.last_active_warehouse_id,
  case
    when db.last_active_warehouse_id is null then 'unknown'
    else safe_cast(db.last_active_warehouse_id as string)
  end as filtered_last_active_warehouse_id,
  db.last_active_polygon_id,
  db.total_orders_count,
  db.user_gmv
from
  ${ref('int__users__backend_properties_snapshots')} db
left join
  ${ref('int__users__superapp_amplitude_properties_snapshots')} amp
on
  db.user_id = amp.user_id
and
  db._snapshot_date = amp._snapshot_date